name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: ryanwinter/arm-none-eabi-gcc@v2.0.1
      with:
        # GNU Embedded Toolchain for Arm release name, in the V-YYYY-qZ format (e.g. "9-2019-q4")
        release: '9-2019-q4'

    - name: PULL_CORE
      run: cd ${{github.workspace}}/port/linux && bash pull-core.sh

    - name: INIT

      run: cd ${{github.workspace}}/port/linux && bash init.sh

    - name: TEST
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/port/linux && bash test.sh

    - name: PACKAGE_MANAGER
      run: cd ${{github.workspace}}/tools/pikaPackageManager && go build

    - name: PIKAPI_BOOTLOADER
      run cd ${{github.workspace}}/bsp/PikaPi_Zero/bootloader && make
