class _ModBus:
    def setSlave(self, slave: int): ...
    def serializeReadBits(self, addr: int, nb: int) -> int: ...
    def serializeReadInputBits(self, addr: int, nb: int) -> int: ...
    def serializeReadRegisters(self, addr: int, nb: int) -> int: ...
    def serializeReadInputRegisters(self, addr: int, nb: int) -> int: ...

    def serializeWriteBit(self, addr: int, status: int) -> int: ...
    def deserializeWriteBit(self, msgLength: int) -> int: ...
    def serializeWriteRegister(self, addr: int, value: int) -> int: ...
    def deserializeWriteRegister(self, msgLength: int) -> int: ...
    def deserializeWriteBits(self, msgLength: int) -> int: ...
    def deserializeWriteRegisters(self, msgLength: int) -> int: ...
    def serializeMaskWriteRegister(self, addr: int, andMask: int, orMask: int) -> int: ...
    def deserializeMaskWriteRegister(self, msgLength: int) -> int: ...
    def serializeWriteAndReadRegisters(self, writeAddr: int, writeNb: int, src: bytes, readAddr: int, readNb: int) -> int: ...
    def serializeReportSlaveId(self) -> int: ...

    def deserializeReadBits(self, msgLength: int, dest: bytes) -> int: ...
    def deserializeReadInputBits(self, msgLength: int, dest: bytes) -> int: ...
    def deserializeReadRegisters(self, msgLength: int, dest: bytes) -> int: ...
    def deserializeReadInputRegisters(self, msgLength: int, dest: bytes) -> int: ...
    def serializeWriteBits(self, addr: int, nb: int, src: bytes) -> int: ...
    def serializeWriteRegisters(self, addr: int, nb: int, src: bytes) -> int: ...
    def deserializeWriteAndReadRegisters(self, msgLength: int, dest: bytes) -> int: ...

    def deserializeReportSlaveId(self, msgLength: int, maxDest: int, dest: bytes) -> int: ...
    
    def getSendBuff(self) -> bytes: ...
    def getReadBuff(self) -> bytes: ...
    def __init__rtu(self, sendBuffSize: int, readBuffSize: int): ...
    def __init__tcp(self, sendBuffSize: int, readBuffSize: int): ...
